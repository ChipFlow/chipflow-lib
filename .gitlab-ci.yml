image: python:3.11

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip

before_script:
  - apt-get update -y
  - apt-get install curl
  - pip3 install poetry
  - poetry install

stages:
  - prechecks
  - release

license:
  image: docker:latest
  stage: prechecks
  services:
    - name: "docker:dind"
  before_script: [] # We don't need to install our dependencies for this
  script: 
    # Use Google's `addlicence` to check for BSD-2-Clause license 
    # See: https://github.com/google/addlicense
    - docker run --platform=linux/amd64 -v ${PWD}:/src ghcr.io/google/addlicense -v -check -l BSD-2-Clause -c "ChipFlow" -s=only -ignore **/__init__.py **/*.py

lint:
  stage: prechecks
  script: make lint

# Publish all `main` builds to our GitLab project PyPi repo
publish-to-gitlab:
    stage: release
    script:        
        - poetry self add "poetry-dynamic-versioning[plugin]"
        - poetry build
        - poetry config repositories.chipflow https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
        - poetry config http-basic.chipflow gitlab-ci-token ${CI_JOB_TOKEN}
        - poetry publish --repository chipflow
    rules:
        - if: '$CI_COMMIT_BRANCH =~ /^main$/'

# Release to PyPi from v* tags
release-from-tag:
    stage: release
    script:
        - poetry self add "poetry-dynamic-versioning[plugin]"
        - poetry build
        # To publish we will use the `POETRY_PYPI_TOKEN_PYPI` env var
        - poetry publish
    rules:
        - if: $CI_COMMIT_TAG =~ /^v.*/
